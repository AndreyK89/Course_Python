Index: Seminars/Homework/DZ 3/Task 1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Выполнил Андрей Кошелев Аналитика | 6 | 3040 | 21.09.2022\r\n# Задача 1 - Задайте список из нескольких чисел. Напишите программу,\r\n# которая найдёт сумму элементов списка, стоящих на нечётной позиции.\r\n# Пример:\r\n# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12\r\n\r\n\r\ndef sum_element(lst):\r\n    sum = 0\r\n    for i in range(len(lst)):\r\n        if i % 2 != 0:\r\n            sum += lst[i]\r\n    print(f\"Сумма элементов на нечетных позициях = {sum}\")\r\n\r\nlst = [2, 3, 5, 9, 3]\r\nsum_element(lst)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Seminars/Homework/DZ 3/Task 1.py b/Seminars/Homework/DZ 3/Task 1.py
--- a/Seminars/Homework/DZ 3/Task 1.py	(revision c0f564cf7d069809594aeb738541d0fdf0858241)
+++ b/Seminars/Homework/DZ 3/Task 1.py	(date 1664649432312)
@@ -4,6 +4,15 @@
 # Пример:
 # - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12
 
+# def sum_element(lst):
+#     sum = 0
+#     for i in range(len(lst)):
+#         if i%2 !=0:
+#             sum += lst[i]
+#     return sum
+#
+# lst_numbers = [2, 3, 5, 9, 3]
+# print(f"Сумма равна: {sum_element(lst_numbers)}")
 
 def sum_element(lst):
     sum = 0
@@ -13,4 +22,4 @@
     print(f"Сумма элементов на нечетных позициях = {sum}")
 
 lst = [2, 3, 5, 9, 3]
-sum_element(lst)
+sum_element(lst)
\ No newline at end of file
Index: Seminars/Homework/DZ 3/Task 5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Seminars/Homework/DZ 3/Task 5.py b/Seminars/Homework/DZ 3/Task 5.py
new file mode 100644
--- /dev/null	(date 1664650142194)
+++ b/Seminars/Homework/DZ 3/Task 5.py	(date 1664650142194)
@@ -0,0 +1,22 @@
+# Выполнил Андрей Кошелев Аналитика | 6 | 3040 | 21.09.2022
+# Задача 5 - Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
+# Пример:
+# - для k = 8 список будет выглядеть так:
+# [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] [Негафибоначчи]
+
+n = int(input('Введите число: '))
+
+def get_fibonacci(n):
+    fibo_nums = []
+    a, b = 1, 1
+    for i in range(n+1-1):
+        fibo_nums.append(a)
+        a, b = b, a + b
+    a, b = 0, 1
+    for i in range (n+1):
+        fibo_nums.insert(0, a)
+        a, b = b, a - b
+    return fibo_nums
+
+fibo_nums = get_fibonacci(n)
+print(get_fibonacci(n))
\ No newline at end of file
Index: Seminars/Homework/DZ 3/Task 4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Seminars/Homework/DZ 3/Task 4.py b/Seminars/Homework/DZ 3/Task 4.py
new file mode 100644
--- /dev/null	(date 1664649939874)
+++ b/Seminars/Homework/DZ 3/Task 4.py	(date 1664649939874)
@@ -0,0 +1,16 @@
+# Выполнил Андрей Кошелев Аналитика | 6 | 3040 | 21.09.2022
+# 4 - Напишите программу, которая будет преобразовывать десятичное число в двоичное.
+# *Пример:*
+# - 45 -> 101101
+# - 3 -> 11
+# - 2 -> 10
+
+def conversion_binary(number):
+    binary_number = ''
+    while number !=0:
+        binary_number = str(number%2) + binary_number
+        number //=2
+    return binary_number
+
+number = int(input('Введите число: '))
+print(conversion_binary(number))
\ No newline at end of file
