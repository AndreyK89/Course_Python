Index: Seminars/Homework/DZ5/Task 3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Seminars/Homework/DZ5/Task 3.py b/Seminars/Homework/DZ5/Task 3.py
--- a/Seminars/Homework/DZ5/Task 3.py	
+++ b/Seminars/Homework/DZ5/Task 3.py	
@@ -23,7 +23,9 @@
     number = ''
     res = ''
     for i in range(len(data)):
-        if not data[i].isalpha():
+        if not data[i].isalpha():   # Метод .isalpha() проверяем что строка состоит только из букв.
+
+
             number += data[i]
         else:
             res = res + data[i] * int(number)
@@ -31,6 +33,6 @@
     return res
 
 
-s = input("Введите текст для сжатия данных: ")
-print(f"Данные после сжатия: {rle_coding(s)}")
-print(f"Данные после дешифровки: {decoding(rle_coding(s))}")
\ No newline at end of file
+string = input("Введите текст для сжатия данных: ")
+print(f"Данные после сжатия: {rle_coding(string)}")
+print(f"Данные после дешифровки: {decoding(rle_coding(string))}")
\ No newline at end of file
Index: LecturePython/HelloPython/join_job/data_provider.py
===================================================================
diff --git a/LecturePython/HelloPython/join_job/data_provider.py b/LecturePython/HelloPython/join_job/data_provider.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/join_job/data_provider.py	
@@ -0,0 +1,45 @@
+# Модуль 1: сбор информаци   data_provider
+# Модуль 2: логирование      logger
+# Модуль 3: UI               user_interface
+# Модуль 4: HTML-генератор   html_creater
+# Модуль 5: главный модуль   main
+
+# from random import randint
+#
+# def get_temperature(sensor):
+#     return randint(-20, 0) if sensor else randint(0, 20)
+#
+# def get_pressure(sensor):
+#     if sensor:
+#          return randint(720, 750)
+#     else:
+#          return randint(750, 770)
+# def get_wind_speed(sensor):
+#     if sensor == 1:
+#          return randint(0, 30)
+#     else:
+#          return randint(30, 50)
+
+
+import imp
+from random import randint
+
+def get_temperature(sensor):
+    return randint(-20, 0) if sensor else randint(0, 20)
+
+
+def get_preassure(sensor):
+    if sensor:
+        return randint(720, 750)
+    else:
+        return randint(750, 770)
+
+
+def get_wind_speed(sensor):
+    if sensor == 1:
+        return randint(0, 30)
+    else:
+        return randint(30, 50)
+
+def data_collection(sensor = 1):
+    return (get_temperature(sensor), get_preassure(sensor), get_wind_speed(sensor))
\ No newline at end of file
Index: LecturePython/HelloPython/join_job/html_creater.py
===================================================================
diff --git a/LecturePython/HelloPython/join_job/html_creater.py b/LecturePython/HelloPython/join_job/html_creater.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/join_job/html_creater.py	
@@ -0,0 +1,38 @@
+from user_interface import temperature_view
+from user_interface import wind_speed_view
+from user_interface import pressure_view
+
+def create(device = 1):
+    style = 'style="font-size:30px;"'
+    html = '<html>\n  <head></head>\n  <body>\n'
+    html += '    <p {}>Temperature: {} c</p>\n'\
+        .format(style, temperature_view(device))
+    html += '    <p {}>Wind_speed: {} m/s</p>\n'\
+        .format(style, wind_speed_view(device))
+    html += '    <p {}>Pressure: {} mmHg</p>\n'\
+        .format(style, pressure_view(device))
+    html += '  </body>\n</html>'
+
+    with open('index.html', 'w') as page:
+        page.write(html)
+
+    return html
+
+
+
+def new_create(data ,device = 1):
+    t, p, w = data
+    style = 'style="font-size:30px;"'
+    html = '<html>\n  <head></head>\n  <body>\n'
+    html += '    <p {}>Temperature: {} c</p>\n'\
+        .format(style, t)
+    html += '    <p {}>Wind_speed: {} m/s</p>\n'\
+        .format(style, w)
+    html += '    <p {}>Pressure: {} mmHg</p>\n'\
+        .format(style, p)
+    html += '  </body>\n</html>'
+
+    with open('new_index.html', 'w') as page:
+        page.write(html)
+
+    return data
\ No newline at end of file
Index: LecturePython/HelloPython/join_job/logger.py
===================================================================
diff --git a/LecturePython/HelloPython/join_job/logger.py b/LecturePython/HelloPython/join_job/logger.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/join_job/logger.py	
@@ -0,0 +1,44 @@
+# from datetime import datetime as dt
+# from time import time
+#
+# def temperature_logger(data):
+#     time = dt.now().strftime('%H:%M')
+#     with open('log.csv', 'a') as file:
+#         file.write('{};temperature;{}\n'
+#                     .format(time, data))
+#
+# def pressure_logger(data):
+#     time = dt.now().strftime('%H:%M')
+#     with open('log.csv', 'a') as file:
+#         file.write('{};pressure;{}\n'
+#                     .format(time, data))
+#
+#
+# def wind_speed_logger(data):
+#     time = dt.now().strftime('%H:%M')
+#     with open('log.csv', 'a') as file:
+#         file.write('{};wind_speed;{}\n'
+#                     .format(time, data))
+
+
+from datetime import datetime as dt
+from time import time
+
+def temperature_logger(data):
+    time = dt.now().strftime('%H:%M')
+    with open('log.csv', 'a') as file:
+        file.write('{};temperature;{}'
+                    .format(time, data))
+
+def pressure_logger(data):
+    time = dt.now().strftime('%H:%M')
+    with open('log.csv', 'a') as file:
+        file.write('{};pressure;{}'
+                    .format(time, data))
+
+
+def wind_speed_logger(data):
+    time = dt.now().strftime('%H:%M')
+    with open('log.csv', 'a') as file:
+        file.write('{};wind_speed;{}'
+                    .format(time, data))
Index: Seminars/Homework/DZ5/Task 2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Seminars/Homework/DZ5/Task 2.py b/Seminars/Homework/DZ5/Task 2.py
--- a/Seminars/Homework/DZ5/Task 2.py	
+++ b/Seminars/Homework/DZ5/Task 2.py	
@@ -57,66 +57,4 @@
     if count == 9 and win == False:
         print('Ничья.')
         break
-print_board(board)
-
-
-
-
-# print("*" * 10, " Игра Крестики-нолики для двух игроков ", "*" * 10)
-#
-# board = list(range(1,10))
-#
-# def draw_board(board):
-#    print("-" * 13)
-#    for i in range(3):
-#       print("|", board[0+i*3], "|", board[1+i*3], "|", board[2+i*3], "|")
-#       print("-" * 13)
-#
-# def take_input(player_token):
-#    valid = False
-#    while not valid:
-#       player_answer = input("Куда поставим " + player_token+"? ")
-#       try:
-#          player_answer = int(player_answer)
-#       except:
-#          print("Некорректный ввод. Вы уверены, что ввели число?")
-#          continue
-#       if player_answer >= 1 and player_answer <= 9:
-#          if(str(board[player_answer-1]) not in "XO"):
-#             board[player_answer-1] = player_token
-#             valid = True
-#          else:
-#             print("Эта клетка уже занята!")
-#       else:
-#         print("Некорректный ввод. Введите число от 1 до 9.")
-#
-# def check_win(board):
-#    win_coord = ((0,1,2), (3,4,5), (6,7,8), (0,3,6), (1,4,7), (2,5,8), (0,4,8), (2,4,6))
-#    for each in win_coord:
-#        if board[each[0]] == board[each[1]] == board[each[2]]:
-#           return board[each[0]]
-#    return False
-#
-# def main(board):
-#     counter = 0
-#     win = False
-#     while not win:
-#         draw_board(board)
-#         if counter % 2 == 0:
-#            take_input("X")
-#         else:
-#            take_input("O")
-#         counter += 1
-#         if counter > 4:
-#            tmp = check_win(board)
-#            if tmp:
-#               print(tmp, "выиграл!")
-#               win = True
-#               break
-#         if counter == 9:
-#             print("Ничья!")
-#             break
-#     draw_board(board)
-# main(board)
-#
-# input("Нажмите Enter для выхода!")
+print_board(board)
\ No newline at end of file
Index: LecturePython/HelloPython/join_job/main.py
===================================================================
diff --git a/LecturePython/HelloPython/join_job/main.py b/LecturePython/HelloPython/join_job/main.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/join_job/main.py	
@@ -0,0 +1,8 @@
+import html_creater as hc
+import xml_generator as xg
+import data_provider as dp
+
+# print(hc.create())
+# print(xg.create())
+
+hc.new_create(xg.new_create(dp.data_collection()))
\ No newline at end of file
Index: LecturePython/HelloPython/join_job/user_interfase.py
===================================================================
diff --git a/LecturePython/HelloPython/join_job/user_interfase.py b/LecturePython/HelloPython/join_job/user_interfase.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/join_job/user_interfase.py	
@@ -0,0 +1,42 @@
+import data_provider as prov
+import logger as log
+
+def temperature_view(sensor):
+    data = prov.get_temperature(sensor)
+    log.temperature_logger(data)
+    return data
+
+
+def pressure_view(sensor):
+    data = prov.get_pressure(sensor)
+    log.pressure_logger(data)
+    return data
+
+def wind_speed_view(sensor):
+    data = prov.get_wind_speed(sensor)
+    log.wind_speed_logger(data)
+    return data
+
+# import imp
+#
+# import data_provider as prov
+# import logger as log
+#
+#
+# def temperature_view(sensor):
+#     data = prov.get_temperature(sensor)
+#     log.temperature_logger(data)
+#     return data
+#
+#
+# def pressure_view(sensor):
+#     data = prov.get_preassure(sensor)
+#     log.pressure_logger(data)
+#     return data
+#
+#
+# def wind_speed_view(sensor):
+#     data = prov.get_wind_speed(sensor)
+#     log.wind_speed_logger(data)
+#     return data
+
Index: Seminars/Homework/DZ 1/Task 5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Seminars/Homework/DZ 1/Task 5.py b/Seminars/Homework/DZ 1/Task 5.py
--- a/Seminars/Homework/DZ 1/Task 5.py	
+++ b/Seminars/Homework/DZ 1/Task 5.py	
@@ -5,6 +5,7 @@
 # - A (3,6); B (2,1) -> 5,09
 # - A (7,-5); B (1,-1) -> 7,21
 
+
 x1 = float(input('Ведите координату x первой точки: '))
 y1 = float(input('Ведите координату y первой точки: '))
 x2 = float(input('Ведите координату x второй точки: '))
Index: LecturePython/HelloPython/Calc/main.py
===================================================================
diff --git a/LecturePython/HelloPython/Calc/main.py b/LecturePython/HelloPython/Calc/main.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/Calc/main.py	
@@ -0,0 +1,3 @@
+import controller as c
+
+c.button_click()
\ No newline at end of file
Index: Seminars/Homework/DZ 2/Task 2.2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Seminars/Homework/DZ 2/Task 2.2.py b/Seminars/Homework/DZ 2/Task 2.2.py
--- a/Seminars/Homework/DZ 2/Task 2.2.py	
+++ b/Seminars/Homework/DZ 2/Task 2.2.py	
@@ -9,4 +9,4 @@
 for i in range(1, n+1):
     first_number *= i
     composition.append(first_number)
-print(composition)
+print(composition)
\ No newline at end of file
Index: Seminars/Homework/DZ 6/Task 6.3.py
===================================================================
diff --git a/Seminars/Homework/DZ 6/Task 6.3.py b/Seminars/Homework/DZ 6/Task 6.3.py
new file mode 100644
--- /dev/null	
+++ b/Seminars/Homework/DZ 6/Task 6.3.py	
@@ -0,0 +1,24 @@
+# Выполнил Андрей Кошелев Аналитика | 6 | 3040 | 21.09.2022
+# DZ_3 Задача 2 - Напишите программу, которая найдёт произведение пар чисел списка.
+# Парой считаем первый и последний элемент, второй и предпоследний и т.д.
+# Пример:
+# - [2, 3, 4, 5, 6] => [12, 15, 16];
+# - [2, 3, 5, 6] => [12, 15]
+
+# def mult_lst(lst):
+#     length = len(lst)//2 + 1 if len(lst) % 2 != 0 else len(lst)//2
+#     print(length)
+#     new_lst = [lst[i]*lst[len(lst)-i-1] for i in range(length)]
+#     return new_lst
+#
+# lst_numbers = [2, 3, 4, 5, 6]
+# print(mult_lst(lst_numbers))
+
+
+def mult_lst(lst):
+    length = len(lst)//2 + 1 if len(lst) % 2 != 0 else len(lst)//2
+    new_lst = [lst[i]*lst[len(lst)-i-1] for i in range(length)]
+    print(new_lst)
+
+lst = list(map(int, input("Введите числа через пробел: ").split()))     # Улучшение кода функция map.
+mult_lst(lst)
\ No newline at end of file
Index: LecturePython/HelloPython/Calc/model_sub.py
===================================================================
diff --git a/LecturePython/HelloPython/Calc/model_sub.py b/LecturePython/HelloPython/Calc/model_sub.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/Calc/model_sub.py	
@@ -0,0 +1,14 @@
+x = 0
+y = 0
+
+def init(a, b):
+    global x
+    global y
+    x = a
+    y = b
+    # init(11, 22)
+
+# print(x)
+# print(y)
+def do_it():
+    return x - y
\ No newline at end of file
Index: LecturePython/HelloPython/Calc/model_mult.py
===================================================================
diff --git a/LecturePython/HelloPython/Calc/model_mult.py b/LecturePython/HelloPython/Calc/model_mult.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/Calc/model_mult.py	
@@ -0,0 +1,14 @@
+x = 0
+y = 0
+
+def init(a, b):
+    global x
+    global y
+    x = a
+    y = b
+    # init(11, 22)
+
+# print(x)
+# print(y)
+def do_it():
+    return x * y
\ No newline at end of file
Index: LecturePython/HelloPython/Calc/view.py
===================================================================
diff --git a/LecturePython/HelloPython/Calc/view.py b/LecturePython/HelloPython/Calc/view.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/Calc/view.py	
@@ -0,0 +1,5 @@
+def view_data(data, title):
+    print(f'{title} = {data}')
+
+def get_value():
+    return int(input('value = '))
\ No newline at end of file
Index: Seminars/Homework/DZ 6/Task 6.2.py
===================================================================
diff --git a/Seminars/Homework/DZ 6/Task 6.2.py b/Seminars/Homework/DZ 6/Task 6.2.py
new file mode 100644
--- /dev/null	
+++ b/Seminars/Homework/DZ 6/Task 6.2.py	
@@ -0,0 +1,24 @@
+# Выполнил Андрей Кошелев Аналитика | 6 | 3040 | 21.09.2022
+# DZ_4 Задача 3: Задайте последовательность чисел. Напишите программу,
+# которая выведет список неповторяющихся элементов исходной последовательности.
+
+
+# from random import random
+#
+# list = []
+# for j in range(10):
+#     list.append(int(random() * 10))
+# print(list)
+#
+# new_list = []
+# for i in list:
+#     if list.count(i) == 1:
+#         new_list.append(i)
+# print(new_list)
+
+
+lst = list(map(int, input("Введите числа через пробел: ").split()))    # Улучшение кода функция map.
+print(f"Исходный список: {lst}")
+new_lst = []
+[new_lst.append(i) for i in lst if i not in new_lst]
+print(f"Список из неповторяющихся элементов: {new_lst}")
\ No newline at end of file
Index: LecturePython/HelloPython/Calc/model_sum.py
===================================================================
diff --git a/LecturePython/HelloPython/Calc/model_sum.py b/LecturePython/HelloPython/Calc/model_sum.py
new file mode 100644
--- /dev/null	
+++ b/LecturePython/HelloPython/Calc/model_sum.py	
@@ -0,0 +1,30 @@
+# Задача 0
+
+# x = int(input('x = '))     # интерн
+# y = int(input('y = '))
+# print(f'{x} + {y} = {x + y}')
+
+# def sum(a, b):
+# return a + b
+# x = int(input('x = '))
+# y = int(input('y = '))
+# print(f'{x} + {y} = {sum(x, y)}')
+#
+#
+# sum = lambda a, b: a + b
+
+# model
+x = 0
+y = 0
+
+def init(a, b):
+    global x
+    global y
+    x = a
+    y = b
+    # init(11, 22)
+
+# print(x)
+# print(y)
+def do_it():
+    return x + y
\ No newline at end of file
Index: Seminars/Homework/DZ 3/Task 2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Seminars/Homework/DZ 3/Task 2.py b/Seminars/Homework/DZ 3/Task 2.py
--- a/Seminars/Homework/DZ 3/Task 2.py	
+++ b/Seminars/Homework/DZ 3/Task 2.py	
@@ -12,4 +12,10 @@
     return new_lst
 
 lst_numbers = [2, 3, 4, 5, 6]
-print(mult_lst(lst_numbers))
\ No newline at end of file
+print(mult_lst(lst_numbers))
+
+
+lst = [2, 3, 4, 5, 6]
+mult_lst(lst)
+lst = list(map(int, input("Введите числа через пробел:\n").split()))
+mult_lst(lst)
\ No newline at end of file
